# 機能
＜動画ファイルを圧縮する＞
ユーザーは、サーバに動画ファイルをアップロードすると、そのファイルを小さく圧縮したものをダウンロードします。
サーバは自動的に最適な圧縮方法を判断します。
圧縮レベルを high, medium, low のように、あらかじめ選択肢を用意してください。

＜動画の解像度を変更する＞
ユーザーは動画をアップロードし、使用したい解像度を選択すると、クライアントはこの新しい解像度の動画をダウンロードします。

＜動画の縦横比を変更する＞
ユーザーは動画をアップロードして、使用したい縦横比を選択し、クライアントはこの新しい動画をダウンロードします。

＜動画をオーディオに変換する＞
動画ファイルをアップロードすると、その動画の音声のみを収録した MP3 バージョンがダウンロードされます。

＜時間範囲から GIF や WEBM を作成する＞
動画をアップロードし、時間範囲を指定すると、サーバは動画をトリミングして GIF または WEBM に変換します。

クライアントとサーバ間で通信を行う場合は、TCPソケットを使用します。
データストリームを送信するので、独自のプロトコルを作成するか、クライアントとサーバ間でビデオファイルを受け渡しするためのサンプルプロトコルを使用してください。
ビデオデータストリームと一緒にJSONファイルを送信するか、最初にJSON設定ファイルを送信して、実際のビデオファイルを送信する前に応答または検証を待つのが良い方法でしょう。
->最初にJSONファイルを送信してサーバーでチェック、問題なければビデオデータを受け取るようにして、トラフィック量を抑える。


# 要件
ffmpeg
```
sudo apt update
sudo apt install ffmpeg
```


# ライブラリ
ffmpeg-python


